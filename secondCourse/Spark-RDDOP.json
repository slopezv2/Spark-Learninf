{"paragraphs":[{"text":"%spark\n//Coleccion normal\nval array = Array(1,2,3,4,5)\nval arrayRdd = sc.parallelize(array)","user":"anonymous","dateUpdated":"2019-01-23T01:55:04+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"array: Array[Int] = Array(1, 2, 3, 4, 5)\narrayRdd: org.apache.spark.rdd.RDD[Int] = ParallelCollectionRDD[0] at parallelize at <console>:31\n"}]},"apps":[],"jobName":"paragraph_1548208316869_-1390481207","id":"20190123-015156_545923155","dateCreated":"2019-01-23T01:51:56+0000","dateStarted":"2019-01-23T01:54:23+0000","dateFinished":"2019-01-23T01:54:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:408"},{"text":"%spark\narrayRdd.first\narrayRdd.take(3)\n","user":"anonymous","dateUpdated":"2019-01-23T02:36:09+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res5: Int = 1\nres6: Array[Int] = Array(1, 2, 3)\n"}]},"apps":[],"jobName":"paragraph_1548208463330_603119028","id":"20190123-015423_1137807113","dateCreated":"2019-01-23T01:54:23+0000","dateStarted":"2019-01-23T02:36:09+0000","dateFinished":"2019-01-23T02:36:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:409"},{"text":"%spark\narrayRdd.take(10).foreach(println)","user":"anonymous","dateUpdated":"2019-01-23T02:37:14+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"1\n2\n3\n4\n5\n"}]},"apps":[],"jobName":"paragraph_1548210945259_612087557","id":"20190123-023545_1804889066","dateCreated":"2019-01-23T02:35:45+0000","dateStarted":"2019-01-23T02:37:14+0000","dateFinished":"2019-01-23T02:37:14+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:410"},{"text":"%spark\nval lst = (0 to 10000 by 5).toList","user":"anonymous","dateUpdated":"2019-01-23T02:37:51+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"lst: List[Int] = List(0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100, 105, 110, 115, 120, 125, 130, 135, 140, 145, 150, 155, 160, 165, 170, 175, 180, 185, 190, 195, 200, 205, 210, 215, 220, 225, 230, 235, 240, 245, 250, 255, 260, 265, 270, 275, 280, 285, 290, 295, 300, 305, 310, 315, 320, 325, 330, 335, 340, 345, 350, 355, 360, 365, 370, 375, 380, 385, 390, 395, 400, 405, 410, 415, 420, 425, 430, 435, 440, 445, 450, 455, 460, 465, 470, 475, 480, 485, 490, 495, 500, 505, 510, 515, 520, 525, 530, 535, 540, 545, 550, 555, 560, 565, 570, 575, 580, 585, 590, 595, 600, 605, 610, 615, 620, 625, 630, 635, 640, 645, 650, 655, 660, 665, 670, 675, 680, 685, 690, 695, 700, 705, 710, 715, 720, 725, 730, 735, 740, 745, 750, 755, 760, 765, 770, 775, 780, 785, 790, 79..."}]},"apps":[],"jobName":"paragraph_1548211034521_-273665708","id":"20190123-023714_1464983107","dateCreated":"2019-01-23T02:37:14+0000","dateStarted":"2019-01-23T02:37:51+0000","dateFinished":"2019-01-23T02:37:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:411"},{"text":"%spark\nval lstRedd = sc.parallelize(lst)","user":"anonymous","dateUpdated":"2019-01-23T02:39:27+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"lstRedd: org.apache.spark.rdd.RDD[Int] = ParallelCollectionRDD[16] at parallelize at <console>:34\n"}]},"apps":[],"jobName":"paragraph_1548211071881_-1741990104","id":"20190123-023751_614770348","dateCreated":"2019-01-23T02:37:51+0000","dateStarted":"2019-01-23T02:39:27+0000","dateFinished":"2019-01-23T02:39:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:412"},{"text":"%spark\nlstRedd.collect","user":"anonymous","dateUpdated":"2019-01-23T02:39:52+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res9: Array[Int] = Array(0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100, 105, 110, 115, 120, 125, 130, 135, 140, 145, 150, 155, 160, 165, 170, 175, 180, 185, 190, 195, 200, 205, 210, 215, 220, 225, 230, 235, 240, 245, 250, 255, 260, 265, 270, 275, 280, 285, 290, 295, 300, 305, 310, 315, 320, 325, 330, 335, 340, 345, 350, 355, 360, 365, 370, 375, 380, 385, 390, 395, 400, 405, 410, 415, 420, 425, 430, 435, 440, 445, 450, 455, 460, 465, 470, 475, 480, 485, 490, 495, 500, 505, 510, 515, 520, 525, 530, 535, 540, 545, 550, 555, 560, 565, 570, 575, 580, 585, 590, 595, 600, 605, 610, 615, 620, 625, 630, 635, 640, 645, 650, 655, 660, 665, 670, 675, 680, 685, 690, 695, 700, 705, 710, 715, 720, 725, 730, 735, 740, 745, 750, 755, 760, 765, 770, 775, 780, 785, 790,..."}]},"apps":[],"jobName":"paragraph_1548211092545_1753869051","id":"20190123-023812_1458580013","dateCreated":"2019-01-23T02:38:12+0000","dateStarted":"2019-01-23T02:39:52+0000","dateFinished":"2019-01-23T02:39:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:413"},{"text":"%md\n# Transformaciones sobre dos RDD\n","user":"anonymous","dateUpdated":"2019-02-23T19:43:35+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Transformaciones sobre dos RDD</h1>\n</div>"}]},"apps":[],"jobName":"paragraph_1548211192197_-145130571","id":"20190123-023952_2076968118","dateCreated":"2019-01-23T02:39:52+0000","dateStarted":"2019-02-23T19:43:35+0000","dateFinished":"2019-02-23T19:43:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:414"},{"text":"%pyspark\nrdda = sc.parallelize(['a', 'b', 'c'])\nrddb = sc.parallelize(['c','d','e'])\nrddu = rdda.union(rddb)\nrddu.collect()","user":"anonymous","dateUpdated":"2019-02-23T19:47:15+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"['a', 'b', 'c', 'c', 'd', 'e']\n"}]},"apps":[],"jobName":"paragraph_1550951015370_837286710","id":"20190223-194335_870448348","dateCreated":"2019-02-23T19:43:35+0000","dateStarted":"2019-02-23T19:47:15+0000","dateFinished":"2019-02-23T19:47:15+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:415"},{"text":"%spark\nval rdda = sc.parallelize(List(\"a\", \"b\", \"c\"))\nval rddb = sc.parallelize(List(\"d\", \"e\", \"f\"))\nval rddu = rdda.union(rddb)\nrddu.collect()","user":"anonymous","dateUpdated":"2019-02-23T19:48:42+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"rdda: org.apache.spark.rdd.RDD[String] = ParallelCollectionRDD[6] at parallelize at <console>:29\nrddb: org.apache.spark.rdd.RDD[String] = ParallelCollectionRDD[7] at parallelize at <console>:29\nrddu: org.apache.spark.rdd.RDD[String] = UnionRDD[8] at union at <console>:33\nres0: Array[String] = Array(a, b, c, d, e, f)\n"}]},"apps":[],"jobName":"paragraph_1550951027708_-747109260","id":"20190223-194347_1586166530","dateCreated":"2019-02-23T19:43:47+0000","dateStarted":"2019-02-23T19:48:42+0000","dateFinished":"2019-02-23T19:48:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:416"},{"text":"%pyspark\nrddc = sc.parallelize([\"c\",\"f\", \"g\"])\nrddi = rdda.intersection(rddc)\nrddi.collect()","user":"anonymous","dateUpdated":"2019-02-23T20:18:03+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"['c']\n"}]},"apps":[],"jobName":"paragraph_1550951027316_-891774847","id":"20190223-194347_1370759216","dateCreated":"2019-02-23T19:43:47+0000","dateStarted":"2019-02-23T19:54:03+0000","dateFinished":"2019-02-23T19:54:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:417"},{"text":"%spark\nval rddc = sc.parallelize(List(\"c\",\"f\", \"g\"))\nval rddi = rdda.intersection(rddc)\nrddi.collect()","user":"anonymous","dateUpdated":"2019-02-23T19:55:49+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"rddc: org.apache.spark.rdd.RDD[String] = ParallelCollectionRDD[35] at parallelize at <console>:29\nrddi: org.apache.spark.rdd.RDD[String] = MapPartitionsRDD[41] at intersection at <console>:33\nres2: Array[String] = Array(c)\n"}]},"apps":[],"jobName":"paragraph_1550951026922_-652461031","id":"20190223-194346_1503599144","dateCreated":"2019-02-23T19:43:46+0000","dateStarted":"2019-02-23T19:55:49+0000","dateFinished":"2019-02-23T19:55:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:418"},{"text":"%pyspark\nrdds = rdda.subtract(rddc)\nrdds.collect()","user":"anonymous","dateUpdated":"2019-02-23T20:11:29+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"['a', 'b']\n"}]},"apps":[],"jobName":"paragraph_1550951024033_1797635289","id":"20190223-194344_1601235565","dateCreated":"2019-02-23T19:43:44+0000","dateStarted":"2019-02-23T20:11:29+0000","dateFinished":"2019-02-23T20:11:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:419"},{"text":"%spark\nval rdds = rdda.subtract(rddc)\nrddc.collect()\n","user":"anonymous","dateUpdated":"2019-02-23T20:12:14+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"rdds: org.apache.spark.rdd.RDD[String] = MapPartitionsRDD[53] at subtract at <console>:33\nres3: Array[String] = Array(c, f, g)\n"}]},"apps":[],"jobName":"paragraph_1550951023622_1661818928","id":"20190223-194343_1373670135","dateCreated":"2019-02-23T19:43:43+0000","dateStarted":"2019-02-23T20:12:14+0000","dateFinished":"2019-02-23T20:12:14+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:420"},{"text":"%pyspark\n#Operacion costosa\nrddca = rdda.cartesian(rddb)\nrddca.collect()","user":"anonymous","dateUpdated":"2019-02-23T20:14:14+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[('a', 'c'), ('a', 'd'), ('a', 'e'), ('b', 'c'), ('b', 'd'), ('b', 'e'), ('c', 'c'), ('c', 'd'), ('c', 'e')]\n"}]},"apps":[],"jobName":"paragraph_1550951023246_1904980232","id":"20190223-194343_1114502613","dateCreated":"2019-02-23T19:43:43+0000","dateStarted":"2019-02-23T20:14:14+0000","dateFinished":"2019-02-23T20:14:14+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:421"},{"text":"%spark\nval rddca = rdda.cartesian(rddb)\nrddca.collect()","user":"anonymous","dateUpdated":"2019-02-23T20:15:02+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"rddca: org.apache.spark.rdd.RDD[(String, String)] = CartesianRDD[55] at cartesian at <console>:33\nres4: Array[(String, String)] = Array((a,d), (a,e), (a,f), (b,d), (b,e), (b,f), (c,d), (c,e), (c,f))\n"}]},"apps":[],"jobName":"paragraph_1550952854423_225552928","id":"20190223-201414_9061711","dateCreated":"2019-02-23T20:14:14+0000","dateStarted":"2019-02-23T20:15:02+0000","dateFinished":"2019-02-23T20:15:02+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:422"},{"text":"%md\n# Acciones de agregación","user":"anonymous","dateUpdated":"2019-02-23T20:17:41+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Acciones de agregación</h1>\n</div>"}]},"apps":[],"jobName":"paragraph_1550952902099_671369634","id":"20190223-201502_288951244","dateCreated":"2019-02-23T20:15:02+0000","dateStarted":"2019-02-23T20:17:41+0000","dateFinished":"2019-02-23T20:17:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:423"},{"text":"%md\nReduce: Debe hacerse con operadores conmutativos\n","user":"anonymous","dateUpdated":"2019-02-23T20:29:48+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Reduce: Debe hacerse con operadores conmutativos</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1550953061597_1530008983","id":"20190223-201741_73038847","dateCreated":"2019-02-23T20:17:41+0000","dateStarted":"2019-02-23T20:29:48+0000","dateFinished":"2019-02-23T20:29:48+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:424"},{"text":"%pyspark\nrdd = sc.parallelize(xrange(1,10))\nprint(rdd.glom().collect())\n\np = rdd.reduce(lambda x, y : x * y)\nprint(p)\n\nfrom operator import add\ns = rdd.reduce(add)\nprint(s)\n\np = rdd.reduce(lambda x,y: x - y)\nprint(p)","user":"anonymous","dateUpdated":"2019-02-23T20:34:05+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[[1, 2], [3, 4], [5, 6], [7, 8, 9]]\n362880\n45\n11\n"}]},"apps":[],"jobName":"paragraph_1550953128148_151761802","id":"20190223-201848_117428336","dateCreated":"2019-02-23T20:18:48+0000","dateStarted":"2019-02-23T20:34:05+0000","dateFinished":"2019-02-23T20:34:05+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:425"},{"text":"%spark\nval rdd= sc.parallelize(1 to 9)\nval l = rdd.glom().collect()\n\nval p = rdd.reduce((x,y) => x*y)\nval s = rdd.reduce(_ + _)\nprintln(p)\nprintln(s)","user":"anonymous","dateUpdated":"2019-02-23T20:58:59+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"rdd: org.apache.spark.rdd.RDD[Int] = ParallelCollectionRDD[93] at parallelize at <console>:29\nl: Array[Array[Int]] = Array(Array(1, 2), Array(3, 4), Array(5, 6), Array(7, 8, 9))\np: Int = 362880\ns: Int = 45\n362880\n45\n"}]},"apps":[],"jobName":"paragraph_1550953127773_827365546","id":"20190223-201847_619722985","dateCreated":"2019-02-23T20:18:47+0000","dateStarted":"2019-02-23T20:58:59+0000","dateFinished":"2019-02-23T20:59:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:426"},{"text":"%md\nfold(cero,op): Versión general de reduce, cero es el valor inicial y op es la operación a ejecutar","user":"anonymous","dateUpdated":"2019-02-23T21:01:28+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>fold(cero,op): Versión general de reduce, cero es el valor inicial y op es la operación a ejecutar</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1550953127384_1075528587","id":"20190223-201847_1180682242","dateCreated":"2019-02-23T20:18:47+0000","dateStarted":"2019-02-23T21:01:28+0000","dateFinished":"2019-02-23T21:01:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:427"},{"text":"%pyspark\nfrom operator import add\nrdd = sc.parallelize([range(1,5), range(-10,-3),['a','b','c']])\nf = rdd.fold([], lambda x,y: x + y)\nprint(f)\n\n# Se puede usar usar con un RDD vacio\nsc.parallelize([]).fold(6,add)","user":"anonymous","dateUpdated":"2019-02-24T01:47:23+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[1, 2, 3, 4, -10, -9, -8, -7, -6, -5, -4, 'a', 'b', 'c']\n30\n"}]},"apps":[],"jobName":"paragraph_1550953126993_930478251","id":"20190223-201846_623264628","dateCreated":"2019-02-23T20:18:46+0000","dateStarted":"2019-02-24T01:47:23+0000","dateFinished":"2019-02-24T01:47:24+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:428"},{"text":"%spark\nval rdd = sc.parallelize(List(List.range(1,5), List.range(-10,-3), List('a', 'b', 'c')))\nval f = rdd.fold(List[AnyVal]())((l1,l2) => l1 ::: l2)\nsc.parallelize(List()).fold(6)(_+_)","user":"anonymous","dateUpdated":"2019-02-24T01:52:21+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"rdd: org.apache.spark.rdd.RDD[List[AnyVal]] = ParallelCollectionRDD[8] at parallelize at <console>:29\nf: List[AnyVal] = List(1, 2, 3, 4, -10, -9, -8, -7, -6, -5, -4, a, b, c)\nres0: Int = 30\n"}]},"apps":[],"jobName":"paragraph_1550953126579_1189799010","id":"20190223-201846_2096511455","dateCreated":"2019-02-23T20:18:46+0000","dateStarted":"2019-02-24T01:52:21+0000","dateFinished":"2019-02-24T01:52:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:429"},{"text":"%spark\n// Comportamiento en paralelo\nval a = Array(2,3)\nval rdda = sc.parallelize(a, 2)\nval fa = rdda.fold(0)((p,v) => p+v*v)\nval f = a.fold(0)((p,v) => p+v*v)\nval rddb = sc.parallelize(a,1)\nval fa = rddb.fold(0)((p,v) => p + v*v)","user":"anonymous","dateUpdated":"2019-02-24T02:04:09+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"a: Array[Int] = Array(2, 3)\nrdda: org.apache.spark.rdd.RDD[Int] = ParallelCollectionRDD[12] at parallelize at <console>:31\nfa: Int = 97\nf: Int = 13\nrddb: org.apache.spark.rdd.RDD[Int] = ParallelCollectionRDD[13] at parallelize at <console>:31\nfa: Int = 169\n"}]},"apps":[],"jobName":"paragraph_1550953126201_1432190817","id":"20190223-201846_999802032","dateCreated":"2019-02-23T20:18:46+0000","dateStarted":"2019-02-24T02:04:10+0000","dateFinished":"2019-02-24T02:04:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:430"},{"text":"%md\naggregate(cero, seqOp,combOp): Usa dos funciones de agregación:\n* seqOp: Hace la agregación a nivel de partición, cada partición tendrá un acumulador\n* combOp: Agregación entre particiones\n","user":"anonymous","dateUpdated":"2019-03-17T22:06:30+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1550953125794_100574874","id":"20190223-201845_138951246","dateCreated":"2019-02-23T20:18:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:431","dateFinished":"2019-03-17T22:06:31+0000","dateStarted":"2019-03-17T22:06:30+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>aggregate(cero, seqOp,combOp): Usa dos funciones de agregación:<br/>* seqOp: Hace la agregación a nivel de partición, cada partición tendrá un acumulador<br/>* combOp: Agregación entre particiones</p>\n</div>"}]}},{"text":"%pyspark\n\nl = [1,2,3,4,5,6,7,8]\nrdd = sc.parallelize(l)\nseqOp = (lambda acc, val: (acc[0]+[val*val],\n                            acc[1]*val,\n                            acc[2]+ 1))\ncombOp = (lambda acc1, acc2: (acc1[0] + acc2[0],\n                            acc1[1]* acc2[1],\n                            acc1[2] + acc2[2]))\na = rdd.aggregate(([],1.,0), seqOp, combOp)\nprint(a)","user":"anonymous","dateUpdated":"2019-03-17T22:14:58+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1550953125416_-51016193","id":"20190223-201845_199404847","dateCreated":"2019-02-23T20:18:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:432","dateFinished":"2019-03-17T22:15:24+0000","dateStarted":"2019-03-17T22:14:59+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"([1, 4, 9, 16, 25, 36, 49, 64], 40320.0, 8)\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://10.0.2.15:4040/jobs/job?id=0"],"interpreterSettingId":"2CET3TKHW"}}},{"text":"%pyspark\nrdd = sc.parallelize([i % 20 for i in xrange(10000)], 16)\nprint(\"Número total elementos distintos aproximados {}\".format(rdd.countApproxDistinct(0.5)))\nprint(\"Número total elementos aproximados {}\".format(rdd.countApprox(1000, 0.4)))","user":"anonymous","dateUpdated":"2019-03-18T01:12:35+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1550953125036_193684108","id":"20190223-201845_656738227","dateCreated":"2019-02-23T20:18:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:433","dateFinished":"2019-03-18T01:12:36+0000","dateStarted":"2019-03-18T01:12:35+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Número total elementos distintos aproximados 18\nNúmero total elementos aproximados 10000\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://10.0.2.15:4040/jobs/job?id=3","http://10.0.2.15:4040/jobs/job?id=4"],"interpreterSettingId":"2CET3TKHW"}}},{"text":"%md \n\nEjercicio 1 quijote:\n","user":"anonymous","dateUpdated":"2019-03-18T02:01:56+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1550953124826_485323774","id":"20190223-201844_1630922200","dateCreated":"2019-02-23T20:18:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:434","dateFinished":"2019-03-18T02:01:56+0000","dateStarted":"2019-03-18T02:01:56+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Ejercicio 1 quijote:</p>\n</div>"}]}},{"text":"%pyspark\n\nfichrdd = sc.textFile(\"../datos/quijote.txt\")\npalabras = fichrdd.flatMap(lambda x: x.split(u\" \")).map(lambda p: p.strip(u\".,;:?¿¡!-\\\"\\'\")).countByValue()\nprint(palabras[u\"Quijote\"])\n#fichrdd.map(lambda x: x.count(\"Quijote\")).reduce(lambda x, y: x + y)\n","user":"anonymous","dateUpdated":"2019-03-18T02:16:22+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1550953124653_439538655","id":"20190223-201844_909718654","dateCreated":"2019-02-23T20:18:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:435","dateFinished":"2019-03-18T02:16:23+0000","dateStarted":"2019-03-18T02:16:23+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"2167\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://10.0.2.15:4040/jobs/job?id=14"],"interpreterSettingId":"2CET3TKHW"}}},{"text":"%md\n","user":"anonymous","dateUpdated":"2019-02-23T20:18:44+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1550953124425_330269967","id":"20190223-201844_598349168","dateCreated":"2019-02-23T20:18:44+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:436"}],"name":"Spark-RDDOP","id":"2E3N1GCHS","angularObjects":{"2CCY33GTB:shared_process":[],"2CCQCYKJM:shared_process":[],"2CD8VB8N5:shared_process":[],"2CEZ3N4ZK:shared_process":[],"2CCN184W1:shared_process":[],"2CCTDCCB9:shared_process":[],"2CBRCMJB7:shared_process":[],"2CDTHYD1N:shared_process":[],"2CD85MNWZ:shared_process":[],"2CEM88R8V:shared_process":[],"2CBSSQJJR:shared_process":[],"2CBG9JDC9:shared_process":[],"2CBJUH5Z5:shared_process":[],"2CET3TKHW:shared_process":[],"2CF1VUR2D:shared_process":[],"2CCZDD8PX:shared_process":[],"2CESEPECG:shared_process":[],"2CCZGPF6E:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}